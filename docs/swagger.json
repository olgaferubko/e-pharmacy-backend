{
  "openapi": "3.0.3",
  "info": {
    "title": "E-Pharmacy API",
    "description": "API documentation for E-Pharmacy project",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://e-pharmacy-backend.onrender.com/api",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Endpoints for authentication and registration"
    },
    {
      "name": "Users",
      "description": "Endpoints for user information"
    },
    {
      "name": "Products",
      "description": "Endpoints for products"
    },
    {
      "name": "Product Reviews",
      "description": "Endpoints for product reviews"
    },
    {
      "name": "Stores",
      "description": "Endpoints for pharmacies/stores"
    },
    {
      "name": "Reviews",
      "description": "Endpoints for customer reviews about platform"
    },
    {
      "name": "Cart",
      "description": "Endpoints for cart and orders"
    }
  ],
  "paths": {
    "/user/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Log in a user",
        "operationId": "login",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "email@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "description": "User's access token",
                          "type": "string",
                          "example": "qweX9PnLmYxT4rDbfZKjUoNvHcR5mG2aLsBdXcJu"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User sign out",
        "description": "Sign out a user",
        "operationId": "signOut",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sign out success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh",
        "description": "Refresh a user",
        "operationId": "refresh",
        "security": [],
        "responses": {
          "200": {
            "description": "Refresh the session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "description": "User's access token",
                          "type": "string",
                          "example": "qweX9PnLmYxT4rDbfZKjUoNvHcR5mG2aLsBdXcJu"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registration",
        "description": "Registrate a user",
        "operationId": "registration",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password",
                  "phone"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe",
                    "minLength": 3,
                    "maxLength": 20
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "email@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "12345"
                  },
                  "phone": {
                    "description": "Phone number",
                    "type": "string",
                    "example": "+3800000000000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/user-info": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's information",
        "description": "Get current user's info",
        "operationId": "currentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Products",
        "description": "Get list of products with optional filtering and pagination",
        "operationId": "getProducts",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Filter by product name"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "description": "Filter by product category"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 12
            },
            "description": "Items per page (max 50)"
          }
        ],
        "responses": {
          "200": {
            "description": "Return list of products with pagination meta",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched products!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/product"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "required": [
                        "page",
                        "limit",
                        "total",
                        "totalPages"
                      ],
                      "properties": {
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "limit": {
                          "type": "integer",
                          "example": 12
                        },
                        "total": {
                          "type": "integer",
                          "example": 137
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 12
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/products/categories": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Product Categories",
        "description": "Get a list of available product categories",
        "operationId": "getProductCategories",
        "security": [],
        "responses": {
          "200": {
            "description": "Return list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched categories!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Medicine",
                        "Heart",
                        "Head",
                        "Hand",
                        "Leg",
                        "Dental Care",
                        "Skin Care"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Product Details",
        "description": "Get details of a product by ID",
        "operationId": "getProductById",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Return product details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched product details!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/products/{productId}/reviews": {
      "get": {
        "tags": [
          "Product Reviews"
        ],
        "summary": "Get Product Reviews",
        "description": "Get all reviews for a specific product",
        "operationId": "getProductReviews",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the product"
          }
        ],
        "responses": {
          "200": {
            "description": "Return product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/productReview"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/stores": {
      "get": {
        "tags": [
          "Stores"
        ],
        "summary": "Get Stores",
        "description": "Get all stores",
        "operationId": "getStores",
        "security": [],
        "responses": {
          "200": {
            "description": "Return list of stores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stores/nearest": {
      "get": {
        "tags": [
          "Stores"
        ],
        "summary": "Get Nearest Stores",
        "description": "Get nearest stores (dummy filter for now)",
        "operationId": "getNearestStores",
        "security": [],
        "responses": {
          "200": {
            "description": "Return list of nearest stores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/store"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/customer-reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get Customer Reviews",
        "description": "Get all customer reviews about the platform",
        "operationId": "getCustomerReviews",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get all reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found reviews!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/review"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/cart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get Cart Items",
        "description": "Get the list of products in the user's cart",
        "operationId": "getCart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return cart items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cart/update": {
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Update Cart",
        "description": "Update the quantity of items in the user's cart",
        "operationId": "updateCart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateCartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cart"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cart/checkout": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Checkout",
        "description": "Process the checkout and clear the user's cart",
        "operationId": "checkoutCart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Order successfully placed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/checkoutResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "$ref": "#/components/schemas/user"
      },
      "Product": {
        "$ref": "#/components/schemas/product"
      },
      "ProductReview": {
        "$ref": "#/components/schemas/productReview"
      },
      "Store": {
        "$ref": "#/components/schemas/store"
      },
      "Review": {
        "$ref": "#/components/schemas/review"
      },
      "CartItem": {
        "$ref": "#/components/schemas/cartItem"
      },
      "Cart": {
        "$ref": "#/components/schemas/cart"
      },
      "UpdateCartRequest": {
        "$ref": "#/components/schemas/updateCartRequest"
      },
      "CheckoutResponse": {
        "$ref": "#/components/schemas/checkoutResponse"
      },
      "user": {
        "title": "User",
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe",
            "minLength": 3,
            "maxLength": 20
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "email@example.com"
          },
          "password": {
            "description": "Hashed user's password",
            "type": "string",
            "example": "$2b$10$RrwIu5gPU5U04YgA6kRzqePu5CEZ4LVvXPB4dfHfrklT2bHu3U9JG",
            "writeOnly": true
          },
          "phone": {
            "description": "Phone number",
            "type": "string",
            "example": "+3800000000000"
          }
        }
      },
      "product": {
        "title": "Product",
        "type": "object",
        "required": [
          "id",
          "name",
          "price",
          "category"
        ],
        "properties": {
          "id": {
            "description": "Product unique id",
            "type": "string",
            "example": "0"
          },
          "photo": {
            "description": "Product photo URL",
            "type": "string",
            "example": "https://i.ibb.co/bLKP624/5-15-1000x1000-min.jpg"
          },
          "name": {
            "description": "Product name",
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "Aspirin"
          },
          "suppliers": {
            "description": "Supplier name",
            "type": "string",
            "example": "Square"
          },
          "stock": {
            "description": "Available stock",
            "type": "number",
            "example": 12
          },
          "price": {
            "description": "Price of the product",
            "type": "number",
            "example": 89.66
          },
          "category": {
            "description": "Product category",
            "type": "string",
            "example": "Medicine"
          },
          "description": {
            "description": "Detailed description of product features",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Although it's typically considered safe, excessive consumption can lead to side effects...",
              "Medicinal Uses: Antioxidant Properties...",
              "Anti-Diabetic Effects: ..."
            ]
          }
        }
      },
      "productReview": {
        "title": "ProductReview",
        "type": "object",
        "required": [
          "_id",
          "productId",
          "userName",
          "comment",
          "rating",
          "daysAgo"
        ],
        "properties": {
          "_id": {
            "description": "MongoDB ObjectId",
            "type": "string",
            "example": "68adc76106ad3fc933db5721"
          },
          "productId": {
            "description": "ID of the product this review belongs to",
            "type": "string",
            "example": "0"
          },
          "userName": {
            "description": "Name of the user who left the review",
            "type": "string",
            "example": "Olga"
          },
          "comment": {
            "description": "Review text about the product",
            "type": "string",
            "example": "Very effective for mild pain relief."
          },
          "rating": {
            "description": "Star rating (1-5)",
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "example": 5
          },
          "daysAgo": {
            "description": "How many days ago the review was left",
            "type": "integer",
            "example": 2
          }
        }
      },
      "store": {
        "title": "Store",
        "type": "object",
        "required": [
          "_id",
          "name",
          "address",
          "city",
          "phone"
        ],
        "properties": {
          "_id": {
            "description": "MongoDB ObjectId",
            "type": "string",
            "example": "68ac790bab129d55f00b6382"
          },
          "name": {
            "description": "Pharmacy / Store name",
            "type": "string",
            "example": "Wellness Pharma"
          },
          "address": {
            "description": "Street address of the store",
            "type": "string",
            "example": "Reitarska St, 17"
          },
          "city": {
            "description": "City where the store is located",
            "type": "string",
            "example": "Kyiv"
          },
          "phone": {
            "description": "Contact phone number",
            "type": "string",
            "example": "045-256-9564"
          },
          "rating": {
            "description": "Average rating of the store",
            "type": "integer",
            "example": 2
          },
          "isOpen": {
            "description": "Indicates whether the store is currently open",
            "type": "boolean",
            "example": true
          }
        }
      },
      "review": {
        "title": "CustomerReview",
        "type": "object",
        "required": [
          "_id",
          "name",
          "testimonial"
        ],
        "properties": {
          "_id": {
            "description": "MongoDB ObjectId",
            "type": "string",
            "example": "68ac799aab129d55f00b63f9"
          },
          "name": {
            "description": "Name of the customer who left the review",
            "type": "string",
            "example": "Maria Tkachuk"
          },
          "testimonial": {
            "description": "Review text provided by the customer",
            "type": "string",
            "example": "I recently used this medical platform to book an appointment with a specialist, and I was impressed by how easy and user-friendly the process was. Highly recommended!"
          }
        }
      },
      "cartItem": {
        "type": "object",
        "required": [
          "productId",
          "quantity"
        ],
        "properties": {
          "productId": {
            "type": "string",
            "example": "0"
          },
          "quantity": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "cart": {
        "type": "object",
        "required": [
          "userId",
          "items"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cartItem"
            }
          }
        }
      },
      "updateCartRequest": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cartItem"
            }
          }
        }
      },
      "checkoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Order successfully placed"
          },
          "cart": {
            "$ref": "#/components/schemas/cart"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "\\\"email\\\" must be a valid email"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "\\\"email\\\" must be a valid email"
                      },
                      "path": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "email"
                        }
                      },
                      "type": {
                        "type": "string",
                        "example": "string.email"
                      },
                      "context": {}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "NotFound error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "UnknownError"
                },
                "data": {
                  "type": "string",
                  "example": "Failed to send the email, please try again later."
                }
              }
            }
          }
        }
      }
    }
  }
}