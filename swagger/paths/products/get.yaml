tags:
  - Products
summary: Get Products
description: Get list of products with optional filtering and pagination
operationId: getProducts
security: []
parameters:
  - in: query
    name: name
    schema: { type: string }
    description: Filter by product name
  - in: query
    name: category
    schema: { type: string }
    description: Filter by product category
  - in: query
    name: page
    schema:
      type: integer
      minimum: 1
      default: 1
    description: Page number
  - in: query
    name: limit
    schema:
      type: integer
      minimum: 1
      maximum: 50
      default: 12
    description: Items per page (max 50)
responses:
  '200':
    description: Return list of products with pagination meta
    content:
      application/json:
        schema:
          type: object
          required: [status, message, data, meta]
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully fetched products!
            data:
              type: array
              items:
                $ref: '../../components/schemas/product.yaml'
            meta:
              type: object
              required: [page, limit, total, totalPages]
              properties:
                page: { type: integer, example: 1 }
                limit: { type: integer, example: 12 }
                total: { type: integer, example: 137 }
                totalPages: { type: integer, example: 12 }
  '400':
    $ref: '../../components/responses/400.yaml'
  '404':
    $ref: '../../components/responses/404.yaml'
  '500':
    $ref: '../../components/responses/500.yaml'
